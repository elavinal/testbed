name: "nextmn-testbed"
services:
  ue1:
    container_name: ue1
    hostname: ue1
    restart: always
    environment:
      MSISDN: "0000000001"
      GNBS: |-
        - "{{ ipv6('gnb1', 'ran') }}"
      CONFIGURED_NSSAI: |-
        - sst: 1
          sd: 000001
      DEFAULT_NSSAI: |-
        - sst: 1
          sd: 000001
      SESSIONS: |-
        - type: "IPv4"
          apn: "srv6"
          slice:
            sst: 1
            sd: 000001
    image: louisroyer/ueransim-ue
    cap_add:
      - NET_ADMIN
    devices:
      - "/dev/net/tun:/dev/net/tun"
    sysctls:
      net.ipv6.conf.all.disable_ipv6: 0
    command: [" "]
    networks:
      ran: # automatic allocation by docker compose

  ue2:
    container_name: ue2
    hostname: ue2
    restart: always
    environment:
      MSISDN: "0000000002"
      GNBS: |-
        - "{{ ipv6('gnb2', 'ran') }}"
      CONFIGURED_NSSAI: |-
        - sst: 1
          sd: 000001
      DEFAULT_NSSAI: |-
        - sst: 1
          sd: 000001
      SESSIONS: |-
        - type: "IPv4"
          apn: "srv6"
          slice:
            sst: 1
            sd: 000001
    image: louisroyer/ueransim-ue
    cap_add:
      - NET_ADMIN
    devices:
      - "/dev/net/tun:/dev/net/tun"
    sysctls:
      net.ipv6.conf.all.disable_ipv6: 0
    command: [" "]
    networks:
      ran: # automatic allocation by docker compose

  gnb1:
    container_name: gnb1
    hostname: gnb1
    restart: always
    environment:
      NCI: 000000001
      RLS_IP: "{{ ipv6('gnb1', 'ran') }}"
      N2_IP: "{{ ipv4('gnb1', 'control') }}"
      N3_IP: "{{ ipv4('gnb1', 'dataplane') }}"
      SUPPORTED_NSSAIS: |-
        - sst: 1
          sd: 000001
      MCC: "001"
      MNC: "01"
      ID_LEN: 32
      TAC: 1
      AMF_CONFIGS: |-
        - address: "{{ ipv4('amf', 'control') }}"
          port: 38412
      ROUTES_INIT: |-
        - add {{ ipv4('srgw0', 'srgw0') }} via {{ ipv4('srgw0', 'dataplane') }}
    image: louisroyer/ueransim-gnb
    command: [" "]
    cap_add:
      - NET_ADMIN
    devices:
      - "/dev/net/tun:/dev/net/tun"
    sysctls:
      net.ipv6.conf.all.disable_ipv6: 0
    networks:
      ran:
        ipv4_address: "{{ ipv4('gnb1', 'ran') }}"
        ipv6_address: "{{ ipv6('gnb1', 'ran') }}"
      control:
        ipv4_address: "{{ ipv4('gnb1', 'control') }}"
      dataplane:
        ipv4_address: "{{ ipv4('gnb1', 'dataplane') }}"

  gnb2:
    container_name: gnb2
    hostname: gnb2
    restart: always
    environment:
      NCI: 000000002
      RLS_IP: "{{ ipv6('gnb2', 'ran') }}"
      N2_IP: "{{ ipv4('gnb2', 'control') }}"
      N3_IP: "{{ ipv4('gnb2', 'dataplane') }}"
      SUPPORTED_NSSAIS: |-
        - sst: 1
          sd: 000001
      MCC: "001"
      MNC: "01"
      ID_LEN: 32
      TAC: 1
      AMF_CONFIGS: |-
        - address: "{{ ipv4('amf', 'control') }}"
          port: 38412
      ROUTES_INIT: |-
        - add {{ ipv4('srgw0', 'srgw0') }} via {{ ipv4('srgw0', 'dataplane') }}
    image: louisroyer/ueransim-gnb
    command: [" "]
    cap_add:
      - NET_ADMIN
    devices:
      - "/dev/net/tun:/dev/net/tun"
    sysctls:
      net.ipv6.conf.all.disable_ipv6: 0
    networks:
      ran:
        ipv4_address: "{{ ipv4('gnb2', 'ran') }}"
        ipv6_address: "{{ ipv6('gnb2', 'ran') }}"
      control:
        ipv4_address: "{{ ipv4('gnb2', 'control') }}"
      dataplane:
        ipv4_address: "{{ ipv4('gnb2', 'dataplane') }}"

  amf:
    container_name: amf
    hostname: amf
    restart: always
    environment:
      N2: "{{ ipv4('amf', 'control') }}"
      SBI_REGISTER_IP: "amf.sbi"
      SBI_BINDING_IP: "{{ ipv4('amf', 'sbi') }}"
      SBI_BINDING_PORT: "8000"
      MCC: "001"
      MNC: "01"
      NRF: "nrf.sbi:8000"
      SUPPORT_DNN_LIST: |-
        - srv6
      SNSSAI_LIST: |-
        - sst: 1
          sd: 000001
      TAC: "000001"
    image: louisroyer/dev-free5gc-amf
    command: [" "]
    cap_add:
      - NET_ADMIN
    networks:
      control:
        ipv4_address: "{{ ipv4('amf', 'control') }}"
      sbi:
        ipv4_address: "{{ ipv4('amf', 'sbi') }}"

  mongodb:
    container_name: mongodb
    hostname: mongodb
    image: mongo
    command: "mongod --port 27017 --bind_ip_all"
    restart: always
    networks:
      db:

  nrf:
    container_name: nrf
    hostname: nrf
    restart: always
    environment:
      MONGO_HOST: "mongodb.db"
      SBI_REGISTER_IP: "nrf.sbi"
      SBI_BINDING_IP: "{{ ipv4('nrf', 'sbi') }}"
      SBI_BINDING_PORT: "8000"
      MCC: "001"
      MNC: "01"
    image: "louisroyer/dev-free5gc-nrf"
    command: [" "]
    networks:
      db:
      sbi:
        ipv4_address: "{{ ipv4('nrf', 'sbi') }}"

  ausf:
    container_name: ausf
    hostname: ausf
    restart: always
    environment:
      SBI_REGISTER_IP: "ausf.sbi"
      SBI_BINDING_IP: "{{ ipv4('ausf', 'sbi') }}"
      SBI_BINDING_PORT: "8000"
      MCC: "001"
      MNC: "01"
      NRF: "nrf.sbi:8000"
    image: "louisroyer/dev-free5gc-ausf"
    command: [" "]
    networks:
      sbi:
        ipv4_address: "{{ ipv4('ausf', 'sbi') }}"

  udm:
    container_name: udm
    hostname: udm
    restart: always
    environment:
      SBI_REGISTER_IP: "udm.sbi"
      SBI_BINDING_IP: "{{ ipv4('udm', 'sbi') }}"
      SBI_BINDING_PORT: "8000"
      NRF: "nrf.sbi:8000"
    image: "louisroyer/dev-free5gc-udm"
    command: [" "]
    networks:
      sbi:
        ipv4_address: "{{ ipv4('udm', 'sbi') }}"

  udr:
    container_name: udr
    hostname: udr
    restart: always
    environment:
      MONGO_HOST: "mongodb.db"
      SBI_REGISTER_IP: "udr.sbi"
      SBI_BINDING_IP: "{{ ipv4('udr', 'sbi') }}"
      SBI_BINDING_PORT: "8000"
      NRF: "nrf.sbi:8000"
    image: "louisroyer/dev-free5gc-udr"
    command: [" "]
    networks:
      db:
      sbi:
        ipv4_address: "{{ ipv4('udr', 'sbi') }}"

  pcf:
    container_name: pcf
    hostname: pcf
    restart: always
    environment:
      MONGO_HOST: "mongodb.db"
      SBI_REGISTER_IP: "pcf.sbi"
      SBI_BINDING_IP: "{{ ipv4('pcf', 'sbi') }}"
      SBI_BINDING_PORT: "8000"
      NRF: "nrf.sbi:8000"
    image: "louisroyer/dev-free5gc-pcf"
    command: [" "]
    networks:
      db:
      sbi:
        ipv4_address: "{{ ipv4('pcf', 'sbi') }}"
  smf:
    container_name: smf
    hostname: smf
    restart: always
    environment:
      SBI_REGISTER_IP: "smf.sbi"
      SBI_BINDING_IP: "{{ ipv4('smf', 'sbi') }}"
      SBI_BINDING_PORT: "8000"
      NRF: "nrf.sbi:8000"
      N4: "{{ ipv4('smf', 'control') }}"
      MCC: "001"
      MNC: "01"
      SNSSAI_INFOS: |-
        - sNssai:
            sst: 1
            sd: 000001
          dnnInfos:
            - dnn: srv6
              dns:
                ipv4: 9.9.9.9 # TODO: replace with local dns
                ipv6: 2620:fe::fe
      UP_NODES: |-
        gnb1:
          type: AN
        gnb2:
          type: AN
        UPF:
          type: UPF
          nodeID: "{{ ipv4('srgw0', 'control') }}"
          addr: "{{ ipv4('srgw0', 'control') }}"
          sNssaiUpfInfos:
            - sNssai:
                sst: 1
                sd: 000001
              dnnUpfInfoList:
                - dnn: srv6
                  pool: 10.2.0.0/24 # slice0
          interfaces:
            - interfaceType: N3
              endpoints:
                - {{ ipv4('srgw0', 'srgw0') }}
              networkInstances:
                - srv6
      ULCL: "true"
      LINKS: |-
        - A: gNB1
          B: UPF
        - A: gNB2
          B: UPF
      UEROUTING_INFO: |-
        none1:
          members:
            - imsi-001010000000001
          topology:
            - A: gNB1
              B: UPF
        none2:
          members:
            - imsi-001010000000002
          topology:
            - A: gNB2
              B: UPF
    image: "louisroyer/dev-free5gc-smf"
    command: [" "]
    networks:
      control:
        ipv4_address: "{{ ipv4('smf', 'control') }}"
      sbi:
        ipv4_address: "{{ ipv4('smf', 'sbi') }}"

  populate:
    container_name: populate
    hostname: populate
    restart: "no" # oneshot
    environment:
      MONGO_HOST: "mongodb.db"
      SLICES: |-
        - sst: 1
          sd: 000001
          varqi: 9
          dnn: srv6
      IMSI: |-
        - imsi-001010000000001
        - imsi-001010000000002
    image: "louisroyer/free5gc-populate"
    command: [" "]
    networks:
      db:

  nssf:
    container_name: nssf
    hostname: nssf
    restart: always
    environment:
      SBI_REGISTER_IP: "nssf.sbi"
      SBI_BINDING_IP: "{{ ipv4('nssf', 'sbi') }}"
      SBI_BINDING_PORT: "8000"
      NRF: "nrf.sbi:8000"
      MCC: "001"
      MNC: "01"
      NSSF_NAME: "NSSF"
      SUPPORTED_NSSAI_IN_PLMN_LIST: |-
          - plmnId:
              mcc: 001
              mnc: 01
            supportedSnssaiList:
              - sst: 1
                sd: 000001
      NSI_LIST: |-
        - snssai:
            sst: 1
          nsiInformationList:
            - nrfId: http://nrf.sbi:8000/nnrf-nfm/v1/nf-instances
              nsiId: 10
      AMF_SET_LIST: |-
        - amfSetId: 1
          amfList:
            - ffa2e8d7-3275-49c7-8631-6af1df1d9d26
          nrfAmfSet: http://nrf.sbi:8000/nnrf-nfm/v1/nf-instances
          supportedNssaiAvailabilityData:
            - tai:
                plmnId:
                  mcc: 001
                  mnc: 01
                tac: 00001
              supportedSnssaiList:
                - sst: 1
                  sd: 000001
      AMF_LIST: |-
        - nfId: 469de254-2fe5-4ca0-8381-af3f500af77c
          supportedNssaiAvailabilityData:
            - tai:
                plmnId:
                  mcc: 001
                  mnc: 01
                tac: 1
              supportedSnssaiList:
                - sst: 1
                  sd: 000001
      TA_LIST: |-
        - tai:
            plmnId:
              mcc: 001
              mnc: 01
            tac: 00001
          accessType: 3GPP_ACCESS
          supportedSnssaiList:
            - sst: 1
              sd: 000001
      MAPPING_LIST_FROM_PLMN: |-
        - operatorName: dummyoperator
          homePlmnId:
            mcc: 001
            mnc: 02
          mappingOfSnssai:
            - servingSnssai:
                sst: 1
                sd: 00001
              homeSnssai:
                sst: 1
                sd: 00001
    image: "louisroyer/dev-free5gc-nssf"
    command: [" "]
    networks:
      sbi:
        ipv4_address: "{{ ipv4('nssf', 'sbi') }}"
  # r0:
  # r1:
  # rr:
  # srgw0:


  # TODO: s1 docker-setup
  s1:
    container_name: "s1"
    hostname: "s1"
    image: nginx
    volumes:
      {{ volume_ro('nginx/instance.conf.template', '/etc/nginx/templates/instance.conf') }}
    environment:
      NGINX_PORT: "80"
      NGINX_SERVICE_ID: "{{ ipv4('s', 'service') }}"
      NGINX_INSTANCE_ID: "{{ ipv4('s1', 'edge') }}"
    networks:
      edge:
        ipv4_address: "{{ ipv4('s1', 'edge') }}"

  # TODO: s2 docker-setup
  s2:
    container_name: "s2"
    hostname: "s2"
    image: nginx
    volumes:
      {{ volume_ro('nginx/instance.conf.template', '/etc/nginx/templates/instance.conf') }}
    environment:
      NGINX_PORT: "80"
      NGINX_SERVICE_ID: "{{ ipv4('s', 'service') }}"
      NGINX_INSTANCE_ID: "{{ ipv4('s2', 'edge') }}"
    networks:
      edge:
        ipv4_address: "{{ ipv4('s2', 'edge') }}"

networks:
  ran:
    name: ran
    enable_ipv6: true
    driver: bridge
    driver_opts:
      com.docker.network.container_iface_prefix: ran-
      com.docker.network.bridge.name: ran
    ipam:
      driver: default
      config:
        - subnet: 10.1.0.0/24
          ip_range: 10.1.0.0/25
          gateway: 10.1.0.254
        - subnet: fd00:0:0:0:1::/80
          ip_range: fd00:0:0:0:1::/81
          gateway: fd00::1:8000:0:1
  sbi:
    name: sbi
    enable_ipv6: false
    driver: bridge
    driver_opts:
      com.docker.network.container_iface_prefix: sbi-
      com.docker.network.bridge.name: sbi
    ipam:
      driver: default
      config:
        - subnet: 10.1.1.0/24
          ip_range: 10.1.1.0/25
          gateway: 10.1.1.254
  db:
    name: db
    enable_ipv6: false
    driver: bridge
    driver_opts:
      com.docker.network.container_iface_prefix: db-
      com.docker.network.bridge.name: db
    ipam:
      driver: default
      config:
        - subnet: 10.1.2.0/24
          ip_range: 10.1.2.0/25
          gateway: 10.1.2.254
  control:
    name: control
    enable_ipv6: true
    driver: bridge
    driver_opts:
      com.docker.networks.container_iface_prefix: control-
      com.docker.network.bridge.name: control
    ipam:
      driver: default
      config:
        - subnet: 10.1.3.0/24
          ip_range: 10.1.3.0/25
          gateway: 10.1.3.254
        - subnet: fd00:0:0:0:2::/80
          ip_range: fd00:0:0:0:2::/81
          gateway: fd00::2:8000:0:1
  dataplane:
    name: dataplane
    enable_ipv6: true
    driver: bridge
    driver_opts:
      com.docker.networks.container_iface_prefix: dataplane-
      com.docker.network.bridge.name: dataplane
    ipam:
      driver: default
      config:
        - subnet: 10.1.4.0/24
          ip_range: 10.1.4.0/25
          gateway: 10.1.4.254
        - subnet: fd00:0:0:0:3::/80
          ip_range: fd00:0:0:0:3::/81
          gateway: fd00::3:8000:0:1
  edge:
    name: edge
    enable_ipv6: false
    driver: bridge
    driver_opts:
      com.docker.networks.container_iface_prefix: edge-
      com.docker.network.bridge.name: edge
    ipam:
      driver: default
      config:
        - subnet: 10.1.5.0/24
          ip_range: 10.1.5.0/25
          gateway: 10.1.5.254
